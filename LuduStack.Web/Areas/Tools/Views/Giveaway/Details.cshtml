@model GiveawayViewModel
@{
    ViewData["Title"] = SharedLocalizer["Giveaway"];
    ViewData["Description"] = "tralala";
    ViewData["Url"] = ViewBag.BaseUrl + Url.Action("stats", "localization", new { area = "tools", id = Model.Id });
    //ViewData["OgImage"] = ViewBag.BaseUrl + "/images/og/oggiveaway.png";

    var isAjax = ViewContext.HttpContext.Request.IsAjaxRequest();
    var canInteract = User.Identity.IsAuthenticated;

    Layout = "_LayoutNoNavigation";
}

@section ComponentStyles {
    <environment include="Development">
        <link rel="stylesheet" href="~/css/giveaway.css">
    </environment>
    <environment exclude="Development">
        <link rel="stylesheet" href="~/css/giveaway.min.css" asp-append-version="true">
    </environment>
}

@section Scripts {
    <environment include="Development">
        <script src="~/js/shared/contentactions.js"></script>
    </environment>
    <environment exclude="Development">
        <script src="~/js/shared/contentactions.min.js" asp-append-version="true"></script>
    </environment>


    <script>
        'use strict';

        // If set to true, the user must press
        // UP UP DOWN ODWN LEFT RIGHT LEFT RIGHT A B
        // to trigger the confetti with a random color theme.
        // Otherwise the confetti constantly falls.
        var onlyOnKonami = false;

        $(function () {
            // Globals
            var $window = $(window)
                , random = Math.random
                , cos = Math.cos
                , sin = Math.sin
                , PI = Math.PI
                , PI2 = PI * 2
                , timer = undefined
                , frame = undefined
                , confetti = [];

            var runFor = 2000
            var isRunning = true

            setTimeout(() => {
                isRunning = false
            }, runFor);

            // Settings
            var konami = [38, 38, 40, 40, 37, 39, 37, 39, 66, 65]
                , pointer = 0;

            var particles = 150
                , spread = 20
                , sizeMin = 5
                , sizeMax = 12 - sizeMin
                , eccentricity = 10
                , deviation = 100
                , dxThetaMin = -.1
                , dxThetaMax = -dxThetaMin - dxThetaMin
                , dyMin = .13
                , dyMax = .18
                , dThetaMin = .4
                , dThetaMax = .7 - dThetaMin;

            var colorThemes = [
                function () {
                    return color(200 * random() | 0, 200 * random() | 0, 200 * random() | 0);
                }, function () {
                    var black = 200 * random() | 0; return color(200, black, black);
                }, function () {
                    var black = 200 * random() | 0; return color(black, 200, black);
                }, function () {
                    var black = 200 * random() | 0; return color(black, black, 200);
                }, function () {
                    return color(200, 100, 200 * random() | 0);
                }, function () {
                    return color(200 * random() | 0, 200, 200);
                }, function () {
                    var black = 256 * random() | 0; return color(black, black, black);
                }, function () {
                    return colorThemes[random() < .5 ? 1 : 2]();
                }, function () {
                    return colorThemes[random() < .5 ? 3 : 5]();
                }, function () {
                    return colorThemes[random() < .5 ? 2 : 4]();
                }
            ];
            function color(r, g, b) {
                return 'rgb(' + r + ',' + g + ',' + b + ')';
            }

            // Cosine interpolation
            function interpolation(a, b, t) {
                return (1 - cos(PI * t)) / 2 * (b - a) + a;
            }

            // Create a 1D Maximal Poisson Disc over [0, 1]
            var radius = 1 / eccentricity, radius2 = radius + radius;
            function createPoisson() {
                // domain is the set of points which are still available to pick from
                // D = union{ [d_i, d_i+1] | i is even }
                var domain = [radius, 1 - radius], measure = 1 - radius2, spline = [0, 1];
                while (measure) {
                    var dart = measure * random(), i, l, interval, a, b, c, d;

                    // Find where dart lies
                    for (i = 0, l = domain.length, measure = 0; i < l; i += 2) {
                        a = domain[i], b = domain[i + 1], interval = b - a;
                        if (dart < measure + interval) {
                            spline.push(dart += a - measure);
                            break;
                        }
                        measure += interval;
                    }
                    c = dart - radius, d = dart + radius;

                    // Update the domain
                    for (i = domain.length - 1; i > 0; i -= 2) {
                        l = i - 1, a = domain[l], b = domain[i];
                        // c---d          c---d  Do nothing
                        //   c-----d  c-----d    Move interior
                        //   c--------------d    Delete interval
                        //         c--d          Split interval
                        //       a------b
                        if (a >= c && a < d)
                            if (b > d) domain[l] = d; // Move interior (Left case)
                            else domain.splice(l, 2); // Delete interval
                        else if (a < c && b > c)
                            if (b <= d) domain[i] = c; // Move interior (Right case)
                            else domain.splice(i, 0, c, d); // Split interval
                    }

                    // Re-measure the domain
                    for (i = 0, l = domain.length, measure = 0; i < l; i += 2)
                        measure += domain[i + 1] - domain[i];
                }

                return spline.sort();
            }

            // Create the overarching container
            var container = document.createElement('div');
            container.style.position = 'fixed';
            container.style.top = '0';
            container.style.left = '0';
            container.style.width = '100%';
            container.style.height = '0';
            container.style.overflow = 'visible';
            container.style.zIndex = '9999';

            // Confetto constructor
            function Confetto(theme) {
                this.frame = 0;
                this.outer = document.createElement('div');
                this.inner = document.createElement('div');
                this.outer.appendChild(this.inner);

                var outerStyle = this.outer.style, innerStyle = this.inner.style;
                outerStyle.position = 'absolute';
                outerStyle.width = (sizeMin + sizeMax * random()) + 'px';
                outerStyle.height = (sizeMin + sizeMax * random()) + 'px';
                innerStyle.width = '100%';
                innerStyle.height = '100%';
                innerStyle.backgroundColor = theme();

                outerStyle.perspective = '50px';
                outerStyle.transform = 'rotate(' + (360 * random()) + 'deg)';
                this.axis = 'rotate3D(' +
                    cos(360 * random()) + ',' +
                    cos(360 * random()) + ',0,';
                this.theta = 360 * random();
                this.dTheta = dThetaMin + dThetaMax * random();
                innerStyle.transform = this.axis + this.theta + 'deg)';

                this.x = $window.width() * random();
                this.y = -deviation;
                this.dx = sin(dxThetaMin + dxThetaMax * random());
                this.dy = dyMin + dyMax * random();
                outerStyle.left = this.x + 'px';
                outerStyle.top = this.y + 'px';

                // Create the periodic spline
                this.splineX = createPoisson();
                this.splineY = [];
                for (var i = 1, l = this.splineX.length - 1; i < l; ++i)
                    this.splineY[i] = deviation * random();
                this.splineY[0] = this.splineY[l] = deviation * random();

                this.update = function (height, delta) {
                    this.frame += delta;
                    this.x += this.dx * delta;
                    this.y += this.dy * delta;
                    this.theta += this.dTheta * delta;

                    // Compute spline and convert to polar
                    var phi = this.frame % 7777 / 7777, i = 0, j = 1;
                    while (phi >= this.splineX[j]) i = j++;
                    var rho = interpolation(
                        this.splineY[i],
                        this.splineY[j],
                        (phi - this.splineX[i]) / (this.splineX[j] - this.splineX[i])
                    );
                    phi *= PI2;

                    outerStyle.left = this.x + rho * cos(phi) + 'px';
                    outerStyle.top = this.y + rho * sin(phi) + 'px';
                    innerStyle.transform = this.axis + this.theta + 'deg)';
                    return this.y > height + deviation;
                };
            }


            function poof() {
                if (!frame) {
                    // Append the container
                    document.body.appendChild(container);

                    // Add confetti

                    var theme = colorThemes[onlyOnKonami ? colorThemes.length * random() | 0 : 0]
                        , count = 0;

                    (function addConfetto() {

                        if (onlyOnKonami && ++count > particles)
                            return timer = undefined;

                        if (isRunning) {
                            var confetto = new Confetto(theme);
                            confetti.push(confetto);

                            container.appendChild(confetto.outer);
                            timer = setTimeout(addConfetto, spread * random());
                        }
                    })(0);


                    // Start the loop
                    var prev = undefined;
                    requestAnimationFrame(function loop(timestamp) {
                        var delta = prev ? timestamp - prev : 0;
                        prev = timestamp;
                        var height = $window.height();

                        for (var i = confetti.length - 1; i >= 0; --i) {
                            if (confetti[i].update(height, delta)) {
                                container.removeChild(confetti[i].outer);
                                confetti.splice(i, 1);
                            }
                        }

                        if (timer || confetti.length)
                            return frame = requestAnimationFrame(loop);

                        // Cleanup
                        document.body.removeChild(container);
                        frame = undefined;
                    });
                }
            }

            $window.keydown(function (event) {
                pointer = konami[pointer] === event.which
                    ? pointer + 1
                    : +(event.which === konami[0]);
                if (pointer === konami.length) {
                    pointer = 0;
                    poof();
                }
            });

            if (!onlyOnKonami) poof();
        });

    </script>
}

<section class="content container">
    <div id="featurecontainer" class="row justify-content-center">

        <div class="col-md-12 col-lg-10 px-0 px-md-1">
            <div class="giv-container animate1 pb-5">


                <!-- START OF CAROUSEL -->
                <div id="carouselExampleIndicators" class="carousel slide square-bottom" data-ride="carousel">
                    <ol class="carousel-indicators">
                        <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
                        <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
                        <li data-target="#carouselExampleIndicators" data-slide-to="2"></li>
                    </ol>
                    <div class="carousel-inner">
                        <div class="carousel-item active">
                            <img class="d-block w-100" src="~/images/photo1.jpg" alt="First slide">
                        </div>
                        <div class="carousel-item">
                            <img class="d-block w-100" src="~/images/photo2.jpg" alt="Second slide">
                        </div>
                        <div class="carousel-item">
                            <img class="d-block w-100" src="~/images/photo3.jpg" alt="Third slide">
                        </div>
                    </div>
                    <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="sr-only">Previous</span>
                    </a>
                    <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="sr-only">Next</span>
                    </a>
                </div>
                <!-- END OF CAROUSEL -->

                <div class="px-3 px-sm-5 px-md-5">
                    <!-- START OF TIME/ENTRIES/WINNERS -->
                    <!-- START OF GIVEAWAY TITLE -->
                    <div class="giv-title">
                        <h1>LuduStack Launch Giveaway</h1>
                    </div>
                    <!-- END OF GIVEAWAY TITLE -->
                    <!-- START OF TIME/ENTRIES/WINNERS -->
                    <div class="hr-title h6">
                        <div>TIME LEFT</div>
                    </div>
                    <div class="d-flex text-center align-items-center basic-info">
                        <div class="col-6 col-sm-2 col-md-3 h6 order-2 order-sm-1 basic-b">VALUE: $50</div>
                        <div class="col-12 col-sm-7 col-md-6 order-1 order-sm-2 hr-b-small">
                            <div class="time-left d-flex justify-content-center" id="countdown">
                                <div class="time-unity">
                                    <span id="countdown-days">23</span><br><span class="label">DAYS</span>
                                </div>
                                <div>:</div>
                                <div class="time-unity">
                                    <span id="countdown-hours">19</span><br><span class="label">HOURS</span>
                                </div>
                                <div>:</div>
                                <div class="time-unity">
                                    <span id="countdown-minutes">26</span><br><span class="label">MIN</span>
                                </div>
                                <div>:</div>
                                <div class="time-unity">
                                    <span id="countdown-seconds">46</span><br><span class="label">SEC</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-6 col-sm-2 col-md-3 h6 order-3 basic-b">WINNERS: 2</div>
                    </div>
                    <div class="hr-arrow-down"></div>
                    <!-- END OF TIME/ENTRIES/WINNERS -->
                    <!-- START OF SIGN UP FORM -->
                    <div class="text-center mt-3 alert alert-danger" role="alert" style="display:none;" id="cookies-disabled-warning">
                        It appears your browser cookies are disabled.<br>Please enable them or use a different browser to enter.
                    </div>



                    <div class="text-center pt-1 pb-0" id="mainSignup">
                        <h2 class="mt-2 h3">Enter with your email address</h2>

                        <form class="mt-3 mb-3 justify-content-center" action="https://kingsumo.com/giveaways/w7mwze/enter" method="post" id="giveaway-signup-form">
                            <input type="hidden" name="_token" value="saTqC9xn79tapXEPGcMsQCRTVsyv4e8F8iHFa2xX">
                            <div class="form-inline justify-content-center">
                                <div class="email-input">
                                    <input type="email" class="form-control form-control-lg emailanimate" placeholder="Email" name="email" required="">

                                    <svg class="letter-back" x="0px" y="0px" width="21.6px" height="17.4px" viewBox="0 0 21.6 17.4">
                                        <path class="st0" d="M17.8,16.7H3.8c-1.7,0-3-1.3-3-3V3.8c0-1.7,1.3-3,3-3h14.1c1.7,0,3,1.3,3,3v9.9C20.8,15.3,19.5,16.7,17.8,16.7z"></path>
                                        <path class="st0" d="M3.9,3.7l5.6,4.4c0.8,0.6,1.9,0.6,2.7,0l5.6-4.4"></path>
                                    </svg>
                                    <svg class="letter-front" x="0px" y="0px" width="21.6px" height="17.4px" viewBox="0 0 21.6 17.4">
                                        <path class="st0" d="M17.8,16.7H3.8c-1.7,0-3-1.3-3-3V3.8c0-1.7,1.3-3,3-3h14.1c1.7,0,3,1.3,3,3v9.9C20.8,15.3,19.5,16.7,17.8,16.7z"></path>
                                        <path class="st0" d="M3.9,3.7l5.6,4.4c0.8,0.6,1.9,0.6,2.7,0l5.6-4.4"></path>
                                        <line class="addressline st0" x1="8.4" y1="10.8" x2="3.9" y2="10.8"></line>
                                        <line class="addressline st0" x1="10.1" y1="13.4" x2="3.9" y2="13.4"></line>
                                    </svg>
                                </div>
                                <button class="btn btn-primary btn-lg btn-arrow">Enter</button>
                            </div>

                            <p class="text-muted mt-3">
                                <label class="form-check-label">
                                    <input class="form-check-input mr-2" type="checkbox" name="gdpr_consent" value="1" required=""> <small>I consent to getting sale, promotion, or marketing email*</small>
                                </label>
                            </p>

                            <p class="text-muted mt-3">
                                <label class="form-check-label">
                                    <input class="form-check-input mr-2" type="checkbox" name="marketing_opt_in" value="1"> <small>I want to hear about more free giveaways!</small>
                                </label>
                            </p>

                            <input type="hidden" name="referrer" value="688eyg2">
                        </form>

                    </div>




                    <div class="hr-top mt-5"></div>
                    <!-- END OF SIGN UP FORM -->
                    <!-- START OF GIVEAWAY CONTENT -->
                    <section id="giveaway-description">
                        <div class="pt-4 pb-5">
                            <p>We are launching our new name and to celebrate we are giving you <strong>two $50 Amazon gift cards</strong> so you can buy that game design book you want.</p>
                        </div>
                    </section>
                    <!-- END OF GIVEAWAY CONTENT -->
                    <!-- START OF OFFERED BY -->
                    <!-- END OF OFFERED BY -->
                    <!-- START OF OFFERED BY NO-LOGO-->
                    <div class="offered-by-text">
                        <div class="text-uppercase d-flex flex-wrap justify-content-center">
                            <div class="mx-3"><small title="America/Sao_Paulo"><span class="h6">Giveaway Timezone: </span>-03</small></div>
                            <div class="mx-3"><small><span class="h6">Offered By: </span><a href="https://www.ludustack.com" target="_blank">LuduStack</a></small></div>
                        </div>
                    </div>

                    <!-- END OF OFFERED BY NO-LOGO-->

                </div>
            </div>
        </div>

    </div>
</section>