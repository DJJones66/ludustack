trigger:
- development

pool:
  vmImage: 'ubuntu-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  artifactName: 'ludustackweb'

steps:
- task: gitversion/setup@0
  displayName: Install GitVersion
  inputs:
    versionSpec: '5.1.3'

- script: echo Build.BuildNumber before $(Build.BuildNumber)
- task: gitversion/execute@0
  displayName: Use GitVersion
- script: |
    echo FullSemVer: $(fullSemVer)
    echo ##vso[build.updatebuildnumber]$(fullSemVer)

- script: echo artifactName $(artifactName)
- script: echo Build.BuildNumber after $(Build.BuildNumber)

- task: DotNetCoreCLI@2
  displayName: Restore Packages
  inputs:
    command: 'restore'
    projects: '$(solution)'

- task: DotNetCoreCLI@2
  displayName: Build Solution
  inputs:
    command: 'build'
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration) --no-restore'

- task: DotNetCoreCLI@2
  displayName: 'Run Tests'
  inputs:
    command: 'test'
    projects: '**/*Tests.csproj'
    arguments: '--configuration $(buildConfiguration) --no-restore --no-build --logger trx --collect:"XPlat Code Coverage" --settings coverlet.runsettings'
    workingDirectory: '$(Build.SourcesDirectory)'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage'
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'

- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: publish
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)'
    publishWebProjects: true
    zipAfterPublish: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    ArtifactName: '$(artifactName)'

